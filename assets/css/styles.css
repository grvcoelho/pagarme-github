html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}
html,
body {
  height: 100%;
  background: #f7f7f7;
  font-size: 16px;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
  color: #202020;
  overflow-x: hidden;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}
.container {
  *zoom: 1;
  width: auto;
  max-width: 90%;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
}
.container:before,
.container:after {
  content: '';
  display: table;
}
.container:after {
  clear: both;
}
@media only screen {
  .container {
    *zoom: 1;
    width: auto;
    max-width: 90%;
    float: none;
    display: block;
    margin-right: auto;
    margin-left: auto;
    padding-left: 0;
    padding-right: 0;
  }
  .container:before,
  .container:after {
    content: '';
    display: table;
  }
  .container:after {
    clear: both;
  }
}
@media only screen {
  .container {
    *zoom: 1;
    width: auto;
    max-width: 90%;
    float: none;
    display: block;
    margin-right: auto;
    margin-left: auto;
    padding-left: 0;
    padding-right: 0;
  }
  .container:before,
  .container:after {
    content: '';
    display: table;
  }
  .container:after {
    clear: both;
  }
}
@media only screen {
  .container {
    *zoom: 1;
    width: auto;
    max-width: 90%;
    float: none;
    display: block;
    margin-right: auto;
    margin-left: auto;
    padding-left: 0;
    padding-right: 0;
  }
  .container:before,
  .container:after {
    content: '';
    display: table;
  }
  .container:after {
    clear: both;
  }
}
@media only screen {
  .container {
    *zoom: 1;
    width: auto;
    max-width: 1190px;
    float: none;
    display: block;
    margin-right: auto;
    margin-left: auto;
    padding-left: 0;
    padding-right: 0;
  }
  .container:before,
  .container:after {
    content: '';
    display: table;
  }
  .container:after {
    clear: both;
  }
}
.label,
.label--purple,
.label--red,
.label--green,
.label--blue,
.label--black,
.search-result__filter-label--user,
.search-result__filter-label--organization,
.search-result__filter-label--user--organization,
.search-result__filter-label--all,
.search-result__filter-label--user--all,
.search-result__filter-label--organization--all,
.search-result__filter-label--user--organization--all,
.user-profile__filter-label--name--user,
.user-profile__filter-label--name--organization,
.user-profile__filter-label--name--all,
.user-profile__filter-label--name,
.user-profile__filter-label--issues--user,
.user-profile__filter-label--issues--organization,
.user-profile__filter-label--issues--all,
.user-profile__filter-label--issues,
.user-profile__filter-label--stargazers--user,
.user-profile__filter-label--stargazers--organization,
.user-profile__filter-label--stargazers--all,
.user-profile__filter-label--stargazers,
.user-profile__filter-label--forks--user,
.user-profile__filter-label--forks--organization,
.user-profile__filter-label--forks--all,
.user-profile__filter-label--forks {
  position: relative;
  display: inline-block;
  padding: 2px 4px 2px 3px;
  border-radius: 4px;
  border: 1px solid #b9b9b9;
  font-weight: 600;
  font-size: 12px;
  font-style: italic;
  line-height: 12px;
  text-transform: uppercase;
  color: #b9b9b9;
}
.label--purple,
.search-result__filter-label--user,
.user-profile__filter-label--name--user,
.user-profile__filter-label--issues--user,
.user-profile__filter-label--stargazers--user,
.user-profile__filter-label--stargazers,
.user-profile__filter-label--forks--user {
  border-color: #907db9;
  color: #907db9;
}
.label--red,
.search-result__filter-label--organization,
.search-result__filter-label--user--organization,
.user-profile__filter-label--name--organization,
.user-profile__filter-label--issues--organization,
.user-profile__filter-label--issues,
.user-profile__filter-label--stargazers--organization,
.user-profile__filter-label--forks--organization {
  border-color: #fb5159;
  color: #fb5159;
}
.label--green,
.search-result__filter-label--all,
.search-result__filter-label--user--all,
.search-result__filter-label--organization--all,
.search-result__filter-label--user--organization--all,
.user-profile__filter-label--name--all,
.user-profile__filter-label--issues--all,
.user-profile__filter-label--stargazers--all,
.user-profile__filter-label--forks--all,
.user-profile__filter-label--forks {
  border-color: #6eceaa;
  color: #6eceaa;
}
.label--blue {
  border-color: #0554f2;
  color: #0554f2;
}
.label--black,
.user-profile__filter-label--name {
  border-color: #232323;
  color: #232323;
}
.btn,
.btn--success,
.search-result__more {
  display: inline-block;
  padding: 5px 7px;
  margin-bottom: 0;
  background: image none;
  border: 2px solid #b9b9b9;
  border-radius: 4px;
  font-size: 16px;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
  font-weight: 600;
  font-style: italic;
  line-height: 16px;
  text-transform: uppercase;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  color: #b9b9b9;
  touch-action: manipulation;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transition: opacity cubic-bezier(0.23, 1, 0.32, 1) 0.28s;
  transition: opacity cubic-bezier(0.23, 1, 0.32, 1) 0.28s;
}
.btn:hover,
.btn--success:hover,
.search-result__more:hover {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";
  filter: alpha(opacity=70);
  opacity: 0.7;
}
.btn:active,
.btn--success:active,
.search-result__more:active {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
  filter: alpha(opacity=40);
  opacity: 0.4;
}
.btn--success,
.btn--success--success,
.search-result__more--success,
.search-result__more {
  border-color: #6eceaa;
  color: #6eceaa;
}
.search-container {
  *zoom: 1;
  width: auto;
  max-width: 500px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  margin-top: 50px;
}
.search-container:before,
.search-container:after {
  content: '';
  display: table;
}
.search-container:after {
  clear: both;
}
.search-container__input {
  width: 100%;
  margin-bottom: 30px;
  background: transparent;
  border: 0;
  border-bottom: 2px solid #b9b9b9;
  -webkit-transition: border-color cubic-bezier(0.23, 1, 0.32, 1) 0.4s;
  transition: border-color cubic-bezier(0.23, 1, 0.32, 1) 0.4s;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
  font-size: 22px;
  font-weight: 600;
  font-style: italic;
  color: #5d5d5d;
}
.search-container__input:hover {
  outline: 0;
  border-color: #c4c4c4;
}
.search-container__input:focus {
  outline: 0;
  border-color: #6f6f6f;
}
.search-container__loading {
  margin-bottom: 30px;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
  font-size: 16px;
  font-weight: 600;
  font-style: italic;
  color: #333;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
  opacity: 0.2;
}
.search-results {
  width: 100%;
}
.search-result {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-align-items: center;
  align-items: center;
  background: #fff;
  padding: 15px 20px;
}
.search-result__filter {
  margin-bottom: 30px;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
  font-size: 16px;
  font-weight: 600;
  font-style: italic;
  color: #828282;
}
.search-result__filter-label,
.search-result__filter-label--user,
.search-result__filter-label--organization,
.search-result__filter-label--user--organization,
.search-result__filter-label--all,
.search-result__filter-label--user--all,
.search-result__filter-label--organization--all,
.search-result__filter-label--user--organization--all,
.user-profile__filter-label--name--user,
.user-profile__filter-label--name--organization,
.user-profile__filter-label--name--all,
.user-profile__filter-label--name,
.user-profile__filter-label--issues--user,
.user-profile__filter-label--issues--organization,
.user-profile__filter-label--issues--all,
.user-profile__filter-label--issues,
.user-profile__filter-label--stargazers--user,
.user-profile__filter-label--stargazers--organization,
.user-profile__filter-label--stargazers--all,
.user-profile__filter-label--stargazers,
.user-profile__filter-label--forks--user,
.user-profile__filter-label--forks--organization,
.user-profile__filter-label--forks--all,
.user-profile__filter-label--forks {
  margin-left: 10px;
  cursor: pointer;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
  filter: alpha(opacity=40);
  opacity: 0.4;
  -webkit-transition: opacity cubic-bezier(0.23, 1, 0.32, 1) 0.4s;
  transition: opacity cubic-bezier(0.23, 1, 0.32, 1) 0.4s;
}
.search-result__filter-label.is-enabled,
.search-result__filter-label--user.is-enabled,
.search-result__filter-label--organization.is-enabled,
.search-result__filter-label--user--organization.is-enabled,
.search-result__filter-label--all.is-enabled,
.search-result__filter-label--user--all.is-enabled,
.search-result__filter-label--organization--all.is-enabled,
.search-result__filter-label--user--organization--all.is-enabled,
.user-profile__filter-label--name--user.is-enabled,
.user-profile__filter-label--name--organization.is-enabled,
.user-profile__filter-label--name--all.is-enabled,
.user-profile__filter-label--name.is-enabled,
.user-profile__filter-label--issues--user.is-enabled,
.user-profile__filter-label--issues--organization.is-enabled,
.user-profile__filter-label--issues--all.is-enabled,
.user-profile__filter-label--issues.is-enabled,
.user-profile__filter-label--stargazers--user.is-enabled,
.user-profile__filter-label--stargazers--organization.is-enabled,
.user-profile__filter-label--stargazers--all.is-enabled,
.user-profile__filter-label--stargazers.is-enabled,
.user-profile__filter-label--forks--user.is-enabled,
.user-profile__filter-label--forks--organization.is-enabled,
.user-profile__filter-label--forks--all.is-enabled,
.user-profile__filter-label--forks.is-enabled {
  -ms-filter: none;
  filter: none;
  opacity: 1;
  font-weight: 800;
}
.search-result__avatar {
  width: 40px;
  height: 40px;
  margin-right: 16px;
  border-radius: 50%;
}
.search-result__login {
  font-size: 20px;
  font-weight: 600;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
}
.search-result__url {
  font-size: 16px;
  font-weight: 400;
  font-style: italic;
  color: #0554f2;
  letter-spacing: 1px;
}
.search-result__more {
  padding-right: 10px;
  margin-left: auto;
}
.search-result__more .ss-icon {
  position: relative;
  top: 2px;
}
.user-profile-container {
  *zoom: 1;
  width: auto;
  max-width: 750px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0;
  margin-top: 50px;
}
.user-profile-container:before,
.user-profile-container:after {
  content: '';
  display: table;
}
.user-profile-container:after {
  clear: both;
}
.user-profile {
  margin-bottom: 90px;
}
.user-profile__loading {
  margin-bottom: 30px;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
  font-size: 16px;
  font-weight: 600;
  font-style: italic;
  color: #333;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
  opacity: 0.2;
  text-align: center;
}
.user-profile__avatar {
  text-align: center;
}
.user-profile__avatar img {
  width: 150px;
  height: 150px;
  margin: 0 auto 25px;
  border-radius: 50%;
}
.user-profile__name {
  margin-bottom: 8px;
  font-size: 32px;
  line-height: 32px;
  font-style: italic;
  font-weight: 600;
  text-transform: uppercase;
  text-align: center;
  color: #232323;
}
.user-profile__url {
  display: block;
  margin-bottom: 35px;
  font-size: 16px;
  font-style: italic;
  font-weight: 600;
  text-transform: uppercase;
  text-decoration: none;
  text-align: center;
  color: #0554f2;
}
.user-profile__filter {
  margin-bottom: 30px;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
  font-size: 16px;
  font-weight: 600;
  font-style: italic;
  color: #828282;
}
.user-profile__filter-label {
  margin-left: 10px;
  cursor: pointer;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
  filter: alpha(opacity=40);
  opacity: 0.4;
  -webkit-transition: opacity cubic-bezier(0.23, 1, 0.32, 1) 0.4s;
  transition: opacity cubic-bezier(0.23, 1, 0.32, 1) 0.4s;
}
.user-profile__filter-label.is-enabled {
  -ms-filter: none;
  filter: none;
  opacity: 1;
  font-weight: 800;
}
.user-profile__repo {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-align-items: center;
  align-items: center;
  padding: 15px 20px;
  background: #fff;
}
.user-profile__repo__name {
  font-size: 20px;
  font-weight: 600;
  font-family: "Titillium Web", Helvetica, Arial, sans-serif;
}
.user-profile__repo__url {
  font-size: 16px;
  font-weight: 400;
  font-style: italic;
  color: #0554f2;
  letter-spacing: 1px;
}
.user-profile__repo__stats {
  margin-left: auto;
}
.user-profile__repo__stat,
.user-profile__repo__issues,
.user-profile__repo__stargazers,
.user-profile__repo__forks {
  font-size: 14px;
  line-height: 18px;
  font-weight: 600;
  font-style: italic;
  text-align: left;
  color: #b9b9b9;
}
.user-profile__repo__stat span,
.user-profile__repo__issues span,
.user-profile__repo__stargazers span,
.user-profile__repo__forks span {
  width: 80px;
  display: inline-block;
  text-align: right;
}
.user-profile__repo__issues span {
  color: #fb5159;
}
.user-profile__repo__stargazers span {
  color: #907db9;
}
.user-profile__repo__forks span {
  color: #6eceaa;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
